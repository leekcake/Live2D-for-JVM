/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class moe_leekcake_live2dforjvm_Live2DCubismCoreJNI */

#ifndef _Included_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
#define _Included_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    allocateVector2
 * Signature: (FF)J
 */
JNIEXPORT jlong JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_allocateVector2
  (JNIEnv *, jclass, jfloat, jfloat);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getVector2X
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getVector2X
  (JNIEnv *, jclass, jlong);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getVector2Y
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getVector2Y
  (JNIEnv *, jclass, jlong);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    setVector2X
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_setVector2X
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    setVector2Y
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_setVector2Y
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getVersion
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getVersion
  (JNIEnv *, jclass);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    reviveMocInPlace
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_reviveMocInPlace
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getSizeofModel
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getSizeofModel
  (JNIEnv *, jclass, jlong);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    initializeModelInPlace
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_initializeModelInPlace
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    updateModel
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_updateModel
  (JNIEnv *, jclass, jlong);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    readCanvasInfo
 * Signature: (JJJ)F
 */
JNIEXPORT jfloat JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_readCanvasInfo
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getParameterCount
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getParameterCount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getParameterId
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getParameterId
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getParameterMinimumValue
 * Signature: (JI)F
 */
JNIEXPORT jfloat JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getParameterMinimumValue
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getParameterMaximumValue
 * Signature: (JI)F
 */
JNIEXPORT jfloat JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getParameterMaximumValue
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getParameterDefaultValue
 * Signature: (JI)F
 */
JNIEXPORT jfloat JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getParameterDefaultValue
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getParameterValue
 * Signature: (JI)F
 */
JNIEXPORT jfloat JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getParameterValue
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getPartCount
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getPartCount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getPartId
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getPartId
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getPartOpacity
 * Signature: (JI)F
 */
JNIEXPORT jfloat JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getPartOpacity
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getDrawableCount
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getDrawableCount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getDrawableId
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getDrawableId
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getDrawableConstantFlag
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getDrawableConstantFlag
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getDrawableDynamicFlag
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getDrawableDynamicFlag
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getDrawableTextureIndex
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getDrawableTextureIndex
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getDrawableDrawOrder
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getDrawableDrawOrder
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getDrawableRenderOrder
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getDrawableRenderOrder
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getDrawableOpacity
 * Signature: (JI)F
 */
JNIEXPORT jfloat JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getDrawableOpacity
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getDrawableMaskCount
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getDrawableMaskCount
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getDrawableMask
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getDrawableMask
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getDrawableVertexCount
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getDrawableVertexCount
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getDrawableVertexPosition
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getDrawableVertexPosition
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getDrawableVertexUv
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getDrawableVertexUv
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getDrawableIndexCount
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getDrawableIndexCount
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    getDrawableIndex
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_getDrawableIndex
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     moe_leekcake_live2dforjvm_Live2DCubismCoreJNI
 * Method:    resetDrawableDynamicFlags
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_moe_leekcake_live2dforjvm_Live2DCubismCoreJNI_resetDrawableDynamicFlags
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
