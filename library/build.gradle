apply plugin: 'java'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

//Import: https://github.com/adammurdoch/native-platform/blob/master/build.gradle
//noinspection GroovyAssignabilityCheck
task generateJniHeaders() {
    def classpath = sourceSets.main.output.asPath
    def coreDir = new File(project.rootDir, "Native/Live2DCubismCoreJNI")
    coreDir.mkdirs()

    def memoryDir = new File(project.rootDir, "Native/MemoryAccessJNI")
    memoryDir.mkdirs()

    def frameworkDir = new File(project.rootDir, "Native/Live2DCubismFrameworkJNI")
    frameworkDir.mkdirs()

    def glDir = new File(project.rootDir, "Native/Live2DCubismGLRenderingJNI")
    glDir.mkdirs()

//    def nativeIncludes = "src/native/include"
    //System.println("javah -d ${outputDir.path} -classpath $classpath moe.leekcake.live2dforjvm.Live2DCubismCoreJNI")

    doLast {
        exec {
            executable org.gradle.internal.jvm.Jvm.current().getExecutable("javah")
            args "-d", coreDir.path
            args "-classpath", classpath
            args "moe.leekcake.live2dforjvm.Live2DCubismCoreJNI"
        }

        exec {
            executable org.gradle.internal.jvm.Jvm.current().getExecutable("javah")
            args "-d", memoryDir.path
            args "-classpath", classpath
            args "moe.leekcake.live2dforjvm.core.jni.MemoryAccessJNI"
        }

        exec {
            executable org.gradle.internal.jvm.Jvm.current().getExecutable("javah")
            args "-d", frameworkDir.path
            args "-classpath", classpath
            args "moe.leekcake.live2dforjvm.Live2DCubismFrameworkJNI"
        }

        exec {
            executable org.gradle.internal.jvm.Jvm.current().getExecutable("javah")
            args "-d", glDir.path
            args "-classpath", classpath
            args "moe.leekcake.live2dforjvm.Live2DCubismGLRenderingJNI"
        }
    }

    dependsOn classes
}